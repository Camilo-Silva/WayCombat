// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WayCombat.Api.Data;

#nullable disable

namespace WayCombat.Api.Migrations
{
    [DbContext(typeof(WayCombatDbContext))]
    [Migration("20250812044209_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("WayCombat.Api.Models.AccesoMix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaAcceso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("TEXT");

                    b.Property<int>("MixId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MixId");

                    b.HasIndex("UsuarioId", "MixId")
                        .IsUnique();

                    b.ToTable("AccesoMixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.ArchivoMix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MixId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Orden")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TamañoBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MixId");

                    b.ToTable("ArchivoMixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Mix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContraseñaHash = "$2a$11$.7NfUDtWN6NoDn3rsINJMu/xS9H8WGR4qVdRlybzS/BpLvOoWvhFW",
                            Email = "admin@waycombat.com",
                            FechaActualizacion = new DateTime(2025, 8, 12, 4, 42, 8, 220, DateTimeKind.Utc).AddTicks(3945),
                            FechaCreacion = new DateTime(2025, 8, 12, 4, 42, 8, 220, DateTimeKind.Utc).AddTicks(3694),
                            Nombre = "Administrador",
                            Rol = "Admin"
                        });
                });

            modelBuilder.Entity("WayCombat.Api.Models.AccesoMix", b =>
                {
                    b.HasOne("WayCombat.Api.Models.Mix", "Mix")
                        .WithMany("AccesoMixes")
                        .HasForeignKey("MixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayCombat.Api.Models.Usuario", "Usuario")
                        .WithMany("AccesoMixes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mix");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WayCombat.Api.Models.ArchivoMix", b =>
                {
                    b.HasOne("WayCombat.Api.Models.Mix", "Mix")
                        .WithMany("ArchivoMixes")
                        .HasForeignKey("MixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mix");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Mix", b =>
                {
                    b.Navigation("AccesoMixes");

                    b.Navigation("ArchivoMixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Usuario", b =>
                {
                    b.Navigation("AccesoMixes");
                });
#pragma warning restore 612, 618
        }
    }
}
