// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WayCombat.Api.Data;

#nullable disable

namespace WayCombat.Api.Migrations
{
    [DbContext(typeof(WayCombatDbContext))]
    [Migration("20250916003002_PostgreSQLMigration")]
    partial class PostgreSQLMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WayCombat.Api.Models.AccesoMix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaAcceso")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MixId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MixId");

                    b.HasIndex("UsuarioId", "MixId")
                        .IsUnique();

                    b.ToTable("AccesoMixes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            FechaAcceso = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MixId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            FechaAcceso = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MixId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            FechaAcceso = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MixId = 3,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("WayCombat.Api.Models.ArchivoMix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MixId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<long?>("TamañoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("MixId");

                    b.ToTable("ArchivoMixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Mix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("TamañoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Mixes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Rutinas fundamentales de Way Combat para principiantes",
                            FechaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Titulo = "Mix de Entrenamiento Básico"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Técnicas avanzadas y estrategias para competencias",
                            FechaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Titulo = "Mix Avanzado - Competencia"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "Ejercicios de fortalecimiento y acondicionamiento físico",
                            FechaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Titulo = "Mix de Acondicionamiento"
                        });
                });

            modelBuilder.Entity("WayCombat.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Usuario");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            ContraseñaHash = "$2b$12$RUkztah0eZ97UsyYVqU9betRS67GhIqEGIWpuj41uiefD/rqIuIRm",
                            Email = "admin@waycombat.com",
                            FechaActualizacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Administrador",
                            Rol = "admin"
                        });
                });

            modelBuilder.Entity("WayCombat.Api.Models.AccesoMix", b =>
                {
                    b.HasOne("WayCombat.Api.Models.Mix", "Mix")
                        .WithMany("AccesoMixes")
                        .HasForeignKey("MixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayCombat.Api.Models.Usuario", "Usuario")
                        .WithMany("AccesoMixes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mix");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WayCombat.Api.Models.ArchivoMix", b =>
                {
                    b.HasOne("WayCombat.Api.Models.Mix", "Mix")
                        .WithMany("ArchivoMixes")
                        .HasForeignKey("MixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mix");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Mix", b =>
                {
                    b.Navigation("AccesoMixes");

                    b.Navigation("ArchivoMixes");
                });

            modelBuilder.Entity("WayCombat.Api.Models.Usuario", b =>
                {
                    b.Navigation("AccesoMixes");
                });
#pragma warning restore 612, 618
        }
    }
}
